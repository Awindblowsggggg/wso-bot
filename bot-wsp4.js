const { default: makeWASocket, useMultiFileAuthState } = require('@whiskeysockets/baileys');
const qrcode = require('qrcode-terminal');
const pino = require('pino');
const Fuse = require('fuse.js');

// Banco de preguntas y respuestas
const questionBank = [
    { question: "Hola", answer: [{ text: "¬°Bienvenidoüëã Gracias por contactarnos. Somos üöõTULATITUDüöõ, expertos en ofrecer productos de calidad y un servicio de transporte confiable para que lleguen a donde los necesites. Nuestro compromiso es tu satisfacci√≥n. Estamos aqu√≠ para ayudarte en todo lo que necesites, as√≠ que no dudes en escribirnos. üöõ‚ú®" }] },
    { question: "¬øQu√© puedes hacer?", answer: [{ text: "Puedo responder preguntas, ayudarte con tareas y mucho m√°s." }] },
    { 
        question: "que nos dedicamos", 
        answer: [{ text: `Brindar servicios de transportaci√≥n de carga confiable y eficiente. 
        Actualmente, nos estamos proyectando para complementar nuestra oferta con la comercializaci√≥n 
        de productos de alta demanda, empezando por la sal como nuestro primer paso estrat√©gico.

++++Si el cliente pregunta por otros productos, mencionar que la expansi√≥n ser√° gradual y basada en demanda 
del mercado (ej: "¬øQu√© otros productos le interesar√≠an a futuro?").++++S """, """En TULATITUD nos especializamos en transporte de carga terrestre, garantizando:
‚úîÔ∏è Entregas seguras y puntuales.
‚úîÔ∏è Cobertura nacional.
‚úîÔ∏è Profesionalidad en el servicio.

üåü Adem√°s, estamos desarrollando un nuevo proyecto:
Como parte de nuestra mejora continua, ofrecemos suministro de sal de alta calidadüßÇ (ideal para industria \
alimentaria y la cocina cubana), con la misma seriedad y eficiencia que nos caracteriza. `}] }, 
            
    { 
        question: "beneficios agregados de nuestro producto", 
        answer: [
            { text: ` La primera ventaja es √∫nica: nuestros sacos retractilados est√°n dise√±ados para que usted ahorre tiempo y dinero. 
‚Ä¢   Almacena hasta un 30% m√°s en el mismo espacio (por su forma compacta).
‚Ä¢   Cero p√©rdidas por contaminaci√≥n (protege contra suciedad y plagas).
‚Ä¢   Aumenta la percepci√≥n de calidad: lo que aumenta las ventas
______________
Segundo punto clave: el transporte es 100%  gratis. Imag√≠nese: Cero costos de transportaci√≥n.______________
PERO Tambi√©n tenemos certifico de calidad. ¬øRecuerda el esc√°ndalo de la sal de Nitro que sali√≥ en el noticiero ‚Ä¶? 
Nosotros tenemos clientes Que le compraban a productores q lo q hac√≠an era moler piedras de sal q compraban en la salina y esa sal molida la empaquetaban y la vend√≠an. Por supuesto q ten√≠an mejores precios, pero arriesgando la salud del consumidor y la integridad del negocio del cliente por el riesgo de verse involucrados en demandas por intoxicaci√≥n.
Despu√©s del evento de la sal de nitro esos negocios se hicieron clientes nuestros` }, 
            { text: `‚úÖ BENEFICIO 1: ENVASE RETRACTILADO PREMIUM
üîπ Mejor manipulaci√≥n: Sacos f√°ciles de transportar y apilar ‚Üí Ahorras 30% porciento de espacio en almac√©n.
üîπ Conservaci√≥n √≥ptima: Cero humedad ‚Üí Evitas p√©rdidas por sal apelmazada.
üîπ Impresi√≥n de calidad: Presentaci√≥n profesional ‚Üí Tus clientes pagan m√°s por un producto premium.


üöö BENEFICIO 2: TRANSPORTE INCLUIDO
üîπ Sin costos ocultos: Llevamos la sal a tu negocio ‚Üí Ahorras por viaje vs otros proveedores.


üìú BENEFICIO 3: CALIDAD CERTIFICADA
üîπ Sal 100% yodada: Cumple normas sanitarias ‚Üí Vendes con tranquilidad (0 reclamos).
üîπ Certificado de calidad:  Tranquilidad en la venta y aumento en la confianza del cliente ` }] },
    { 
        question: "Solo Vendemos sal", 
        answer: [
            { text: "¬°ARGUMENTO" }, 
            { text: "Nuestra estrategia es clara: Creemos q la  especializaci√≥n es la clave para liderar el mercado. Nos enfocamos\
     en un solo producto y trabajamos para ser los mejores en su comercializaci√≥n, luego repetiremos el m√©todo con otro producto. Esto nos permite optimizar \
     la log√≠stica, garantizar un suministro constante y ofrecer los mejores precios sin comprometer la calidad.  " },
            { text: "PLANTILLA DE WHATSAPP" },
            { text: `¬øPOR QU√â NOS ESPECIALIZAMOS EN SAL?üßÇ 
      
      
Hola [Nombre del cliente],  

En TULATITUD creemos que la excelencia nace de la especializaci√≥n. 
Por eso, hoy nos enfocamos al 100 porciento en ser los mejores en distribuci√≥n de sal, y te explicamos por qu√© esto 
te beneficia:  

---

‚úÖ VENTAJAS PARA TI:  
1Ô∏è‚É£ ‚è±Ô∏è Log√≠stica perfecta: 

   - Rutas optimizadas ‚Üí Entregas m√°s r√°pidas.  
   - Menos errores ‚Üí Tu pedido siempre llega completo.  


2Ô∏è‚É£ üí∞ Mejor precio garantizado: 
   - Al comprar grandes vol√∫menes de un solo producto obtenemos suministros contantes y costos m√°s bajos ‚Üí Beneficios que compartimos contigo.  
---

üîÆ ¬øY DESPU√âS? 
Una vez dominemos el mercado de la sal, replicaremos este modelo con otros productos. ¬°Pronto tendr√°s m√°s opciones con la misma eficiencia!  

---

üì≤ ¬øListo para probar la diferencia de trabajar con expertos?
üëâ Escr√≠benos tu cantidad requerida y Direcci√≥n.  ` }
        ] 
    },
    {
        question: "es rentable comercializar sal",
        answer: [
            { text: "¬°Aqu√≠ est√° la prueba!" },
            { image: "D:/work/bot/rentsal.jpeg" } // Cambia esta ruta por la ubicaci√≥n de tu imagen local
        ]

    },
    {
        question: "venden con facturas",
        answer: [
            { text: "¬°Aqu√≠ est√° la factura!" },
            { image: "facturas.jpg" } // Cambia esta ruta por la ubicaci√≥n de tu imagen local
        ]
        
    }
];

// Continuar en el sistema Global-Match FLESH**
// Configuraci√≥n de similitud
const fuse = new Fuse(questionBank, {
    keys: ['question'],
    threshold: 0.4,
});

// Funci√≥n para buscar la mejor coincidencia
const findClosestMatch = (input) => {
    const result = fuse.search(input);
    return result.length > 0 ? result[0].item.answer : [{ text: "Lo siento, no tengo una respuesta para eso." }];
};

// Retraso para control de frecuencia
const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));

// Procesar la cola de mensajes
const processQueue = async (sock, recipient, messages) => {
    for (const message of messages) {
        try {
            if (message.text) {
                await sock.sendMessage(recipient, { text: message.text });
                console.log(`Mensaje enviado: ${message.text}`);
            }
            if (message.image) {
                await sock.sendMessage(recipient, { image: { url: message.image } });
                console.log(`Imagen enviada: ${message.image}`);
            }
        } catch (err) {
            console.error('Error al enviar el mensaje:', err);
        }
        await delay(1000); // Agrega un retraso de 1 segundo entre mensajes
    }
};

// Funci√≥n principal
const startBot = async () => {
    try {
        const { state, saveCreds } = await useMultiFileAuthState('./auth_info');
        const sock = makeWASocket({
            logger: pino({ level: 'debug' }),
            auth: state,
        });

        sock.ev.on('creds.update', saveCreds);

        sock.ev.on('connection.update', (update) => {
            const { connection, lastDisconnect, qr } = update;
            if (qr) {
                console.log('Escanea este c√≥digo QR para conectar el bot:');
                qrcode.generate(qr, { small: true });
            }
            if (connection === 'open') {
                console.log('¬°Bot conectado exitosamente!');
            } else if (connection === 'close') {
                const shouldReconnect = lastDisconnect?.error?.output?.statusCode !== 401;
                if (shouldReconnect) {
                    setTimeout(() => startBot(), 5000);
                } else {
                    console.log('Error cr√≠tico: Limpia las credenciales y vuelve a intentarlo.');
                }
            }
        });

        // Manejo de mensajes
        sock.ev.on('messages.upsert', async (msg) => {
            if (msg.messages && msg.messages[0]) {
                const message = msg.messages[0];
                if (message.key.fromMe) {
                    console.log('Mensaje enviado por el bot. Ignorando...');
                    return;
                }

                const sender = message.key.remoteJid;
                const isGroup = sender.endsWith('@g.us'); // Verificar si el mensaje proviene de un grupo

                if (isGroup) {
                    console.log('Mensaje proveniente de un grupo. Ignorando...');
                    return; // No procesar mensajes de grupos
                }

                const messageContent = message.message?.conversation || '';
                console.log(`Mensaje de ${sender}: ${messageContent}`);

                // Encuentra la respuesta m√°s cercana
                const responses = findClosestMatch(messageContent);

                // Env√≠a los mensajes (texto e im√°genes)
                await processQueue(sock, sender, responses);
            }
        });
    } catch (err) {
        console.error('Error al iniciar el bot:', err);
    }
};

startBot();